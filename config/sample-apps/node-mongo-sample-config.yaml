apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: mongo
    app: sample-node-mongo-app
  name: mongo-controller
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo
        app: sample-node-mongo-app
    spec:
      containers:
      - image: mongo
        name: mongo
        ports:
        - name: mongo
          containerPort: 27017
          hostPort: 27017
        volumeMounts:
            - name: mongo-non-persistent-storage
              mountPath: /data/db
      volumes:
        - name: mongo-non-persistent-storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: mongo
    app: sample-node-mongo-app
  name: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    name: mongo
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: web
    app: sample-node-mongo-app
  name: web-controller
spec:
  replicas: 1
  selector:
    name: web
  template:
    metadata:
      labels:
        name: web
        app: sample-node-mongo-app
    spec:
      containers:
      - image: node:10
        command: ['/bin/sh', '-c']
        args: ['cd /home && git clone https://github.com/samdesh-gcp1/sample-node-mongo-app.git demo && cd demo/EmployeeDB/ && npm install && node app.js']
        name: web
        ports:
        - containerPort: 3000
          name: http-server
---
apiVersion: v1
kind: Service
metadata:
  name: web
  labels:
    name: web
    app: sample-node-mongo-app
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
  selector:
    name: web
---
apiVersion: v1
kind: Service
metadata:
  name: web
  labels:
    name: web
    app: sample-node-mongo-app
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
  selector:
    name: web
